#!/bin/perl
# -*- Perl -*-

use FileHandle;

$program = "c:/pgsql/bin/psql";
$args = "";

$runid = "1";

sub plog {
  my $name = shift;
  my $value = shift;

  print "\"$runid\";\"$name\";\"$value\"\n";
}

sub plog_cost {
  my $name = shift;
  my $value = shift;

  my ($start, $total) = split(/\.\./, $value);

  plog($name, $value);
  plog($name . ".start", $start);
  plog($name . ".total", $total);
}

$query = "select * from a3d10000 skyline by (d1), (d2) max, (d3) with sfs window=1";
$sql = "explain analyze $query;";


$res = `$program $args 2>&1 <<EOF
$sql
EOF`;

$res =~ s/^\s+QUERY PLAN\s+-*//;

plog("query", "$query");

if ($res =~ m/Skyline Method: ([^ ]+)\s*( distinct)?\s+([0-9]+) dim/m) {
  plog("skyline.method", $1);
  plog("skyline.distinct", $2 ne "" ? "1" : "0");
  plog("skyline.dim", $3);
}

if ($res =~ m/Skyline Attr:\s*([^\r\n]+)/m) {
  plog("skyline.attr", $1);
}

if ($res =~ m/Skyline\s*\(cost=([0-9.]+\.\.[0-9.]+)\s+rows=([0-9]+)\s+width=([0-9]+)\)\s+\(actual time=([0-9.]+\.\.[0-9.]+)\s+rows=([0-9]+)\s+loops=([0-9]+)\)/m) {

  plog_cost("skyline.est.cost", $1);
  plog("skyline.est.rows", $2);
  plog("skyline.width", $3);
  plog_cost("skyline.cost", $4);
  plog("skyline.rows", $5);
#  plog("skyline.loops", $6);
}
    

if ($res =~ m/Skyline Stats: passes=(\d+)(\s+window=(\d+)k)?(\s+slots=(\d))?/m) {
  plog("skyline.passes", $1);
  if ($2 ne "") {
    plog("skyline.window", $3);
  }

  if ($4 ne "") {
    plog("skyline.slots", $5);
  }
}

if ($res =~ m/Skyline Cmps: tuples=(\d+) fields=(\d+)/m) {
    plog("skyline.cmps.tuples", $1);
    plog("skyline.cmps.fields", $2);
    plog("skyline.cmps.ratio", $2 / $1);
}


if ($res =~ m/Seq Scan on ([^ ]+)\s*\(cost=([0-9.]+\.\.[0-9.]+)\s+rows=([0-9]+)\s+width=([0-9]+)\)\s+\(actual time=([0-9.]+\.\.[0-9.]+)\s+rows=([0-9]+)\s+loops=([0-9]+)\)/m) {
  $seq_table = $1;
  $seq_rows = $6;

  plog("seqscan.table", $1);
  plog_cost("seqscan.cost", $5);
  plog("seqscan.rows", $6);
}

if ($res =~ m/Sort\s+\(cost=([0-9.]+\.\.[0-9.]+)\s+rows=([0-9]+)\s+width=([0-9]+)\)\s+\(actual time=([0-9.]+\.\.[0-9.]+)\s+rows=([0-9]+)\s+loops=([0-9]+)\)/m) {
  $sort_cost = $4;

  plog_cost("sort.cost", $4);

  if ($res =~ m/Sort Method:\s*([^\n\r]+)/m) {
    $sort_method = "\"$1\"";

    plog("sort.method", $1);
  }
}

if ($res =~ m/Index Scan using ([^ ]+) on ([^ ]+)\s*\(cost=([0-9.]+\.\.[0-9.]+)\s+rows=([0-9]+)\s+width=([0-9]+)\)\s+\(actual time=([0-9.]+\.\.[0-9.]+)\s+rows=([0-9]+)\s+loops=([0-9]+)\)/m) {
  $idx_name = $1;
  $idx_table = $2;
  $idx_cost = $6;
  $idx_rows = $7;

  plog("idxscan.idx", $1);
  plog("idxscan.table", $2);
  plog_cost("idxscan.cost", $6);
  plog("idxscan.rows", $7);
}

if ($res =~ m/Total runtime: ([0-9.]+) ms/m) {
  plog("total", $1);
}




# print $res;
# print "skyline $sl_method $sl_distinct $sl_dim $sl_est_cost $sl_est_rows $sl_width $sl_cost $sl_rows $sl_loops\n";
# print "sort $sort_method $sort_cost $sort_rows\n";
# print "seqscan $seq_table $seq_cost $seq_rows\n";
# print "idxscan $idx_name $idx_table $idx_cost $idx_rows\n";
